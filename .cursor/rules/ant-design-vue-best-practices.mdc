---
description: Ant Design Vue 组件库使用最佳实践
globs:
  - "*.vue"
alwaysApply: false
---

## 表格组件 (a-table) 规范

### 插槽使用规范

-   **禁止使用**: `column.slots = { customRender: 'slotName' }` (已在 v3+ 版本中弃用).
-   **推荐使用**: 统一的 `v-slot:bodyCell` 语法, 集中处理所有自定义单元格.

```vue
<!-- ❌ 错误写法 (已弃用) -->
<script setup>
const columns = [{ title: '状态', key: 'status', slots: { customRender: 'status' } }];
</script>
<template>
  <a-table :columns="columns">
    <template #status="{ record }">
      <a-tag>{{ record.status }}</a-tag>
    </template>
  </a-table>
</template>

<!-- ✅ 正确写法 (推荐) -->
<script setup>
const columns = [{ title: '状态', dataIndex: 'status', key: 'status' }];
</script>
<template>
  <a-table :columns="columns">
    <template #bodyCell="{ column, record }">
      <template v-if="column.key === 'status'">
        <a-tag :color="record.status ? 'green' : 'red'">
          {{ record.status ? '启用' : '禁用' }}
        </a-tag>
      </template>
    </template>
  </a-table>
</template>
```

### 列配置 (columns) 规范

-   **废弃**: 不再于列配置中使用 `slots` 属性.
-   对于简单的文本格式化, **推荐使用** `customRender`.
-   对于需要组件或复杂逻辑的渲染, **统一在** `<template #bodyCell>` 中处理.

```javascript
// ✅ 推荐的 columns 配置
const columns = [
  { title: 'ID', dataIndex: 'id', width: 80 },
  { title: '名称', dataIndex: 'name', ellipsis: true },
  // 简单文本转换
  { 
    title: '金额', 
    dataIndex: 'amount', 
    customRender: ({ text }) => `¥${text}` 
  },
  // 复杂渲染, key 是关键
  { title: '状态', key: 'status', width: 100 },
  { title: '操作', key: 'action', width: 150, fixed: 'right' }
];
```

## 表单组件 (a-form) 规范

### 表单验证时机

-   **推荐设置** `trigger: 'blur'`，避免在用户输入过程中进行高频验证, 优化体验.

```vue
<!-- ✅ 推荐的验证规则定义 -->
<script setup>
const rules = {
  email: [
    { required: true, message: '请输入邮箱', trigger: 'blur' },
    { type: 'email', message: '邮箱格式不正确', trigger: 'blur' },
  ],
};
</script>
```

## 消息提示规范

### 统一消息处理

-   根据操作结果, 使用 `message` 提供的不同类型方法给予用户明确反馈.

```javascript
// ✅ 推荐用法
import { message } from 'ant-design-vue';

// 用于成功的操作反馈
message.success('操作成功');

// 用于失败或错误的操作反馈
message.error('操作失败，请重试');

// 用于需要提醒用户的警告信息
message.warning('请注意，该操作不可逆');
```

## 图标使用规范

### 按需导入图标

-   **必须** 从 `@ant-design/icons-vue` 中按需导入图标, 避免全量引入, 减小打包体积.

```vue
<script setup>
import { PlusOutlined, EditOutlined } from '@ant-design/icons-vue';
</script>
<template>
  <a-button type="primary">
    <template #icon><PlusOutlined /></template>
    新增
  </a-button>
</template>
```

## 性能优化建议

### 表格性能

-   当数据量巨大时, **必须开启** 虚拟滚动 (`virtual`).
-   **必须提供** 唯一的 `row-key`.

```vue
<template>
  <a-table
    :data-source="largeDataSet"
    :columns="columns"
    :virtual="true"
    :scroll="{ x: 1300, y: 400 }"
    row-key="id"
  />
</template>
```